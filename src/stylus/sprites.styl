/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$logo_nav_name = 'logo_nav';
$logo_nav_x = 0px;
$logo_nav_y = 0px;
$logo_nav_offset_x = 0px;
$logo_nav_offset_y = 0px;
$logo_nav_width = 57px;
$logo_nav_height = 44px;
$logo_nav_total_width = 57px;
$logo_nav_total_height = 44px;
$logo_nav_image = '../img/sprites/spritesheet.png';
$logo_nav = 0px 0px 0px 0px 57px 44px 57px 44px '../img/sprites/spritesheet.png' 'logo_nav';
$logo_nav_2x_name = 'logo_nav-2x';
$logo_nav_2x_x = 0px;
$logo_nav_2x_y = 0px;
$logo_nav_2x_offset_x = 0px;
$logo_nav_2x_offset_y = 0px;
$logo_nav_2x_width = 114px;
$logo_nav_2x_height = 88px;
$logo_nav_2x_total_width = 114px;
$logo_nav_2x_total_height = 88px;
$logo_nav_2x_image = '../img/sprites/spritesheet.retina-2x.png';
$logo_nav_2x = 0px 0px 0px 0px 114px 88px 114px 88px '../img/sprites/spritesheet.retina-2x.png' 'logo_nav-2x';
$spritesheet_width = 57px;
$spritesheet_height = 44px;
$spritesheet_image = '../img/sprites/spritesheet.png';
$spritesheet_sprites = $logo_nav;
$spritesheet = 57px 44px '../img/sprites/spritesheet.png' $spritesheet_sprites;
$retina_spritesheet_width = 114px;
$retina_spritesheet_height = 88px;
$retina_spritesheet_image = '../img/sprites/spritesheet.retina-2x.png';
$retina_spritesheet_sprites = $logo_nav_2x;
$retina_spritesheet = 114px 88px '../img/sprites/spritesheet.retina-2x.png' $retina_spritesheet_sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retinaSprite` and `retinaSprites`.
*/
$logo_nav_group_name = 'logo_nav';
$logo_nav_group = 'logo_nav' $logo_nav $logo_nav_2x;
$retina_groups = $logo_nav_group;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `retinaSprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon_home_group = 'icon-home' $icon_home $icon_home_2x;

.icon-home {
  retinaSprite($icon_home_group)
}
*/
spriteBackgroundSize($sprite) {
  background-size: $sprite[6] $sprite[7];
}

retinaSprite($retina_group) {
  $normal_sprite = $retina_group[1];
  $retina_sprite = $retina_group[2];
  sprite($normal_sprite)

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    spriteImage($retina_sprite)
    spriteBackgroundSize($normal_sprite)
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}

/*
The `retinaSprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in Stylus

retinaSprites($retina_groups);
*/
retinaSprites($retina_groups) {
  for $retina_group in $retina_groups {
    $sprite_name = $retina_group[0];
    .{$sprite_name} {
      retinaSprite($retina_group);
    }
  }
}
